<launch>
  <!-- Arguments -->
  <arg name="scan_topic"     default="scan"/>
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <!-- AMCL -->
  <node pkg="amcl" type="amcl" name="amcl">

    <!--
      Overall filter parameters
    -->
    <!-- Minimum allowed number of particles -->
    <param name="min_particles"             value="500"/>

    <!-- Maximum allowed number of particles -->
    <param name="max_particles"             value="3000"/>

    <!-- Maximum error between the true distribution and the estimated distribution -->
    <param name="kld_err"                   value="0.02"/>

    <!-- Translational movement required before performing a filter update -->
    <param name="update_min_d"              value="0.20"/>

    <!-- Rotational movement required before performing a filter update -->
    <param name="update_min_a"              value="0.20"/>

    <!-- Number of filter updates required before resampling -->
    <param name="resample_interval"         value="1"/>

    <!--
      Time with which to post-date the transform that is published, to indicate that this
      transform is valid into the future
    -->
    <param name="transform_tolerance"       value="0.5"/>

    <!--
      Exponential decay rate for the slow average weight filter, used in deciding when to recover
      by adding random poses. A good value might be 0.001
    -->
    <param name="recovery_alpha_slow"       value="0.00"/>

    <!--
      Exponential decay rate for the fast average weight filter, used in deciding when to recover
      by adding random poses. A good value might be 0.1.
    -->
    <param name="recovery_alpha_fast"       value="0.00"/>

    <!-- Initial pose mean (x), used to initialize filter with Gaussian distribution -->
    <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>

    <!-- Initial pose mean (y), used to initialize filter with Gaussian distribution -->
    <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>

    <!-- Initial pose mean (yaw), used to initialize filter with Gaussian distribution -->
    <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>

    <!-- Maximum rate (Hz) at which scans and paths are published for visualization, -1.0 to disable -->
    <param name="gui_publish_rate"          value="50.0"/>

    <!-- When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map. -->
    <param name="user_map_topic"            value="true" />

    <!--
      Laser model parameters

      Note that whichever mixture weights are in use should sum to 1. The beam model uses all 4: z_hit,
      z_short, z_max, and z_rand. The likelihood_field model uses only 2: z_hit and z_rand.
    -->
    <remap from="scan"                      to="$(arg scan_topic)"/>

    <!-- Maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used -->
    <param name="laser_max_range"           value="3.5"/>

    <!-- How many evenly-spaced beams in each scan to be used when updating the filter -->
    <param name="laser_max_beams"           value="180"/>

    <!-- Mixture weight for the z_hit part of the model -->
    <param name="laser_z_hit"               value="0.5"/>

    <!-- Mixture weight for the z_short part of the model -->
    <param name="laser_z_short"             value="0.05"/>

    <!-- Mixture weight for the z_max part of the model -->
    <param name="laser_z_max"               value="0.05"/>

    <!-- Mixture weight for the z_max part of the model -->
    <param name="laser_z_rand"              value="0.5"/>

    <!-- Standard deviation for Gaussian model used in z_hit part of the model -->
    <param name="laser_sigma_hit"           value="0.2"/>

    <!-- Exponential decay parameter for z_short part of model -->
    <param name="laser_lambda_short"        value="0.1"/>

    <!-- Maximum distance to do obstacle inflation on map, for use in likelihood_field model -->
    <param name="laser_likelihood_max_dist" value="2.0"/>

    <!--
      Which model to use, either beam, likelihood_field, or likelihood_field_prob (same as
      likelihood_field but incorporates the beamskip feature, if enabled)
    -->
    <param name="laser_model_type"          value="likelihood_field"/>


    <!--
      Odometry model parameters

      If ~odom_model_type is "diff" then we use the sample_motion_model_odometry algorithm from
      Probabilistic Robotics, p136; this model uses the noise parameters odom_alpha1 through
      odom_alpha4, as defined in the book.

      If ~odom_model_type is "omni" then we use a custom model for an omni-directional base, which
      uses odom_alpha1 through odom_alpha5. The meaning of the first four parameters is similar to
      that for the "diff" model. The fifth parameter capture the tendency of the robot to translate
      (without rotating) perpendicular to the observed direction of travel.

      A bug was found and fixed. But fixing the old models would have changed or broken the
      localisation of already tuned robot systems, so the new fixed odometry models were added as
      new types "diff-corrected" and "omni-corrected". The default settings of the odom_alpha
      parameters only fit the old models, for the new model these values probably need to be a lot
      smaller, see http://answers.ros.org/question/227811/tuning-amcls-diff-corrected-and-omni-corrected-odom-models/.

      Also, another bug was found but only fixed after Navigation 1.16, while the current release
      for Kinetic is Navigation 1.14.1. This bug only affects robot with type "omni" and
      "omni-corrected", where odom_alpha1 and odom_alpha4 are actually reversed. I.e. odom_alpha1
      is for the translation odometry noise from robot translation-al motion, and odom_alpha4
       represents the odometry rotation noise from robot's rotation motion.
    -->
    <!-- Which model to use, either "diff", "omni", "diff-corrected" or "omni-corrected" -->
    <param name="odom_model_type"           value="diff"/>

    <!--
      Specifies the expected noise in odometry's rotation estimate from the rotational component
      of the robot's motion
    -->
    <param name="odom_alpha1"               value="0.1"/>

    <!--
      Specifies the expected noise in odometry's rotation estimate from translational component
      of the robot's motion
    -->
    <param name="odom_alpha2"               value="0.1"/>

    <!--
      Specifies the expected noise in odometry's translation estimate from the translational
      component of the robot's motion
    -->
    <param name="odom_alpha3"               value="0.1"/>

    <!--
      Specifies the expected noise in odometry's translation estimate from the rotational
      component of the robot's motion
    -->
    <param name="odom_alpha4"               value="0.1"/>

    <!--
      Which frame to use for odometry.
    -->
    <param name="odom_frame_id"             value="odom"/>

    <!-- Which frame to use for the robot base -->
    <param name="base_frame_id"             value="base_link"/>

    <!-- The name of the coordinate frame published by the localization system -->
    <param name="global_frame_id"             value="map"/>
  </node>
</launch>
