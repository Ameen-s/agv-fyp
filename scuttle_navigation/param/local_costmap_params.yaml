local_costmap:
  # The global frame for the costmap to operate in.
  global_frame: odom
  # The name of the frame for the base link of the robot.
  robot_base_frame: base_link

  # The frequency in Hz for the map to be updated.
  update_frequency: 10.0
  # The frequency in Hz for the map to be publish display information.
  publish_frequency: 10.0
  # Specifies the delay in transform (tf) data that is tolerable in seconds.
  # This parameter serves as a safeguard to losing a link in the tf tree while
  # still allowing an amount of latency the user is comfortable with to exist in
  # the system. For example, a transform being 0.2 seconds out-of-date may be tolerable,
  # but a transform being 8 seconds out of date is not. If the tf transform between the
  # coordinate frames specified by the global_frame and robot_base_frame parameters is
  # transform_tolerance seconds older than ros::Time::now(), then the navigation stack
  # will stop the robot.
  transform_tolerance: 0.5

  static_map: false
  # Whether or not to use a rolling window version of the costmap. If the
  # static_map parameter is set to true, this parameter must be set to false.
  rolling_window: true
  # The width of the map in meters.
  width: 4
  # The height of the map in meters.
  height: 4
  # The resolution of the map in meters/cell.
  resolution: 0.05

  plugins:
  - {name: static_layer, type: "costmap_2d::StaticLayer"}
  - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
  - {name: inflation_layer, type: "costmap_2d::InflationLayer"}

  static_layer:
    unknown_cost_value: 0 # default: 0
    lethal_cost_threshold: 100 # default: 100
    map_topic: map # default: "map"

  obstacle_layer:
    combination_method: 1 #default 1, meaning we will combine the layers
    observation_sources: laser_scan_sensor
    track_unknown_space: false            # Set to fals because the DWA local planner doesn't like unknown space
    map_type: costmap
    laser_scan_sensor:
      sensor_frame: lidar_1               # default: ""
      topic: scan                         # or /scan?
      data_type: LaserScan                # default: "PointCloud"
      marking: true                       # default: true
      clearing: true                      # default: false

  inflation_layer:
    inflation_radius: 0.35 # default: 0.55
